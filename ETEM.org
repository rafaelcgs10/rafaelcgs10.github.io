#+TITLE: Este Título está Mentindo!
#+AUTHOR: Rafael Castro
#+EMAIL: rafaelcgs10@gmail.com
#+startup: beamer
#+LaTeX_CLASS: beamer
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="style.css"/>
#+LATEX_HEADER: \usepackage{graphicx, hyperref, udesc, url}

#+OPTIONS:   H:2 toc:nil
#+DATE: 14/05/2018


* Cantor; Russel
** O Pai da Teoria dos Conjuntos
 - Georg Cantor
   #+attr_latex: :height 150
   #+attr_html: :height 400
  [[file:./ETEM/cantor.jpeg]]

** Cardinalidade de Conjutos  
 - Conjunto de todos os números pares: \(0, 2, 4, 6, 8, 10... \)
 - Conjunto de todos os números naturais: \(0, 1, 2, 3, 4, 5... \)
    
  *Há mais números naturais do que pares?*

** Naturais vs Reais
 - Todos os números naturais: \(0, 1, 2, 3, 4, 5... \)
 - Todos os números reais entre 0.0 e 1.0. Segmento de reta continuo de tamanho 1.
 - Ambos tem infitos números.
 - Se ambos tem o mesmo número de elementos, então há uma correspodência de 1 para 1.

** Argumento da Diagonalização de Cantor
 - Por facilidade, vamos representar os números do segmento de reta em *base binária*.
    
   #+attr_latex: :height 150
   #+attr_html: :height 400
  [[file:./ETEM/diagonal.png]]

** O Pai da Teoria dos Tipos
 - Bertrand Russell
   #+attr_latex: :height 150
  #+attr_html: :height 400
  [[file:./ETEM/russel.png]]
** O Paradoxo de Russel
   \[ M = \{A | A \not \in A\} \]
 - M contém a si mesmo?
 - Se sim, então pela deveria ser pela sua própria definição.
 - Se não, então deveria pela sua própria definição.

* Hilbert; Godel; Turing
** O Último Matemático Universal
  - David Hilbert
  #+attr_html: :height 400
  #+attr_latex: :height 150
  [[file:./ETEM/hilbert.jpg]]

** O Programa de Hilbert

 - Todos esses paradoxos levaram a matemática para uma crise de fundamentos.
 - O Programa de Hilbert tinha como objetivo criar uma fundação sólida (consistente) a qual todo a matemática iria se apoaiar:
    1. A matemática deve ser toda escrita de uma linguagem formal, sem ambiguidade.
    2. Completa: toda as verdades matemáticas podem ser provadas nesse formalismo.
    3. Consistente: não deve ser posssível provar uma contradição nesse formalismo, por exemplo \(0 = 1\).
    4. Decidível: há um algoritmo que decide se uma proposição é verdadeira ou falsa.
  
** O Melhor amigo de Albert Einstein
   - Kurt Gödel
   #+attr_latex: :height 150
  #+attr_html: :height 400
  [[file:./ETEM/godel.jpg]]
 
** O Teorema da Incompletude de Gödel
 - Qualquer formalização da matemática com poder suficiente realizar aritmética básica é incompleta.
 - Codificação numérica (enumeração) para todas as fórmulas da matemática (em seu sistema).
 - Uma proposição somente é demonstrável se a sua codificação for divisível pelas codificações das regras do sistema.
 - A prova consiste em mostrar a existência de uma proposição \(G\) que é verdade se, e somente se, não for possível prova-la.
 - \( G \) é uma proposição que fala sobre si mesma, algo similar ao paradoxo do mentiroso:

** A Proposição \(G\)
 A proposição \(G\) é como o paradoxo de mentiroso:

 *Esta afirmação é falsa.*

  1. Se a frase é verdadeira, então é falsa.
  2. Se a frase é falsa, então deveria ser verdadeira.

 - Há uma lacuna entre verdades e provas.
 - Isso é um resultado muito preocupante, pois diz que há coisas verdadeiras que talvez jamais podemos provar.
 - Não seria ao menos possível um procedimento que decida todas as proposições que podem ser provadas?
    
** O Pai da Ciência da Computação
   - Alan Turing
   #+attr_latex: :height 150
  #+attr_html: :height 400
  [[file:./ETEM/turing.jpg]]
  
** Indecibilidade do Problema da Decisão (Parada)

 - Programas, assim como fórmulas matemáticas, podem ser representadas como números. São enumeráveis.
 - O problema da decisão pede um procedimento (programa) que decida se um dada proposição é verdadeira ou falsa.
 - Turing criou o conceito de uma máquina abstrata: um humano com papel e caneta fazendo computações/contas/provas.
 - A ideia é mostrar que *não existe* máquina abstrata que decida se uma outra máquina para com uma dada entrada.
   
** Conceitos para a prova

 - Máquinas de Turing são programas que podem receber entradas.
 - A máquina decisora se chama \(H\).
 - O objetivo é mostrar que não há máquina \(H\).
 - Programas e entradas são apenas números naturais!

** Prova da Indecibilidade do Problema da Parada por Diagonalização
H(i, j) = 1 se i para com a entrada j

H(i, j) = 0 caso contrário

| H(i, j) |  M1 |  M2 |  M3 |  M4 | ... |
|---------+-----+-----+-----+-----+-----|
| M1      | *1* |   0 |   1 |   0 | ... |
| M2      |   0 | *0* |   1 |   1 | ... |
| M3      |   1 |   1 | *1* |   0 | ... |
| M4      |   0 |   1 |   1 | *1* | ... |
| ...     | ... | ... | ... | ... | ... |

D(p) = 1  se H(p, p) = 0

D(p) = 0  se H(p, p) = 1

|   | M1 | M2 | M3 | M4 | ... |
|---+----+----+----+----+-----|
| D |  0 |  1 |  0 |  0 | ... |

** Alimentando o Demônio com o Demônio

| H(i, i) |  *1*| *0* | *1* | *1* | ... |

|   | M1 | M2 | M3 | M4 | ... | D | ... |
|---+----+----+----+----+-----+---+-----|
| D |  0 |  1 |  0 |  0 | ... | 1 | ... |

| H(i, j) |  M1 |  M2 |  M3 |  M4 | ... | D | ... |
|---------+-----+-----+-----+-----+-----+---+-----|
| M1      | *1* |   0 |   1 |   0 | ... | 1 | ... |
| M2      |   0 | *0* |   1 |   1 | ... | 0 | ... |
| M3      |   1 |   1 | *1* |   0 | ... | 1 | ... |
| M4      |   0 |   1 |   1 | *1* | ... | 1 | ... |
| ...     | ... | ... | ... | ... | ... | 0 | ... |
| D       |   0 |   1 |   0 |   0 | ... | 0 | ... |

H permitiu criar uma contradição, então H não existe.

** Conclusão
 - Paradoxos e contradições motivaram a criação de diversas novas teorias: novas Teoria do Conjuntos, Teoria dos Tipos, Teoria da Prova... 
 - O programa de Hilbert motivou a criação de modelos de computação: Máquinas de Turing, Cálculo Lambda, Funções Recursivas...
 - A incompletude enterrou o determinismo para a matemática.
 - A existência de proposições indecidíveis motivou a criação de uma matemática sem o axioma do terceiro excluído.
