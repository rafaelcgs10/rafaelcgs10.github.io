#+TITLE: Este Título está Mentindo! (ou O Jogo da Contradição)
#+AUTHOR: Rafael Castro - rafaelcgs10.github.io/coq
#+EMAIL: rafaelcgs10@gmail.com
#+startup: beamer
#+LaTeX_CLASS: beamer
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="style.css"/>
#+LATEX_HEADER: \usepackage{graphicx, hyperref, udesc, url}
#+OPTIONS:   H:2 toc:nil
#+DATE: 14/05/2018


* Cantor
** O Pai da Teoria dos Conjuntos
*** Georg Cantor
  [[file:./ETEM/cantor.jpeg]]

** Cardinalidade de Conjutos  
*** Conjunto de todos os números pares: \(0, 2, 4, 6, 8, 10... \)
*** Conjunto de todos os números naturais: \(0, 1, 2, 3, 4, 5... \)
    
  *Há mais números naturais do que pares?*

** Naturais vs Reais
*** Todos os números naturais: \(0, 1, 2, 3, 4, 5... \)
*** Todos os números reais entre 0.0 e 1.0. Segmento de reta continuo de tamanho 1.
*** Ambos tem infitos números.
*** Se ambos tem o mesmo número de elementos, então há uma correspodência de 1 para 1.

** Argumento da Diagonalização de Cantor
*** Por facilidade, vamos representar os números do segumento de reta em base binária.
  [[file:./ETEM/diagonal.png]]

* Russel
** O Pai da Teoria dos Tipos
*** Bertrand Russell
  [[file:./ETEM/russel.png]]
** O Paradoxo de Russel
   \[ M = {A | A \not \in A} \]
*** M contém a si mesmo?
*** Se sim, então pela deveria ser pela sua própria definição.
*** Se não, então deveria pela sua própria definição.

* Hilbert
** O Último Matemático Universal
  [[file:./ETEM/hilbert.jpg]]
** O Programa de Hilbert

*** Todos esses paradoxos levaram a matemática para uma crise de fundamentos.
*** O Programa de Hilbert tinha como objetivo criar uma fundação sólida (consistente) a qual todo a matemática iria se apoaiar:
    1. A matemática deve ser toda escrita de uma linguagem formal, sem ambiguidade.
    2. A formalização precisa ser completa: toda as verdades matemáticas podem ser provadas nesse formalismo.
    3. A formalização precisa ser consistente: não deve ser posssível provar uma contradição nesse formalismo, por exemplo \(0 = 1\).
    4. A formalização precisa ser decidível: há um algoritmo que decide se uma proposição é verdadeira ou falsa.
  
* Gödel
** O Melhor amigo de Albert Einstein
  [[file:./ETEM/godel.jpg]]
 
** O Teorema da Incompletude de Gödel
*** Gödel demonstrou que qualquer formalização da matemática com poder suficiente realizar aritmética básica é incompleta.
*** Gödel criou uma codificação numérica (enumeração) para todas as fórmulas da matemática (em seu sistema).
**** Uma proposição somente é demonstrável se a sua codificação for divisivel pelas codificações das regras do sistema.
*** A prova consiste em mostrar a existência de uma proposição \(G\) que é verdade se, e somente se, não for possível prova-la.
*** \( G \) é uma proposição que fala sobre si mesma, algo similar ao paradoxo do mentiroso:

   *Esta afirmação é falsa.*
**** Se a frase é verdadeira, então é falsa.
**** Se a frase é falsa, então deveria ser verdadeira.

*** Há uma lacuna entre verdades e provas.
*** Isso é um resultado muito preocupante, pois diz que há coisas verdadeiras que talvez jamais podemos provar.
*** Não seria ao menos possível um procedimento que decida todas as proposições que podem ser provadas?
    
* Turing
** O Pai da Ciência da Computação
  [[file:./ETEM/turing.jpg]]
  
** Indecibilidade do Problema da Decisão (Parada)

*** Programas, assim como fórmulas matemáticas, podem ser representadas como números. São enumeráveis.

*** O problema da decisão pede um procedimento (programa) que decida se um dada proposição é verdadeira ou falsa.

*** Turing criou o conceito de uma máquina abstrata: um humano com papel e caneta fazendo computações/contas/provas.

*** A ideia é mostrar que *não existe* máquina abstrata que decida se uma outra máquina para com uma dada entrada.
   
** Prova da Indecibilidade do Problema da Parada por Diagonalização
