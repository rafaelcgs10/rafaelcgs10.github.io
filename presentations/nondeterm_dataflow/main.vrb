\frametitle{Isabelle/HOL: (Co)inductive Predicates}
  \begin{itemize}
    \item Inductive predicate
          \begin{itemize}
            \item Finite number of introduction rule applications
          \end{itemize}
%           \begin{tcblisting}{hbox,listing only,listing options={language=isabelle,aboveskip=0pt,belowskip=0pt},size=fbox,boxrule=0pt,frame hidden,arc=0pt,colback=yellow!10!white}
% inductive in_llist :: "'a => 'a llist => bool" where
%   In_llist: "in_llist x (LCons x lxs)"
% | Next_llist: "in_llist x lxs => in_llist x (LCons y lxs)"

% in_llist 2 (LCons 1 (LCons (2 (...))))
%           \end{tcblisting}
          \pause
    \item Coinductive predicate
          \begin{itemize}
            \item Infinite number of introduction rule applications
          \end{itemize}
%           \begin{tcblisting}{hbox,listing only,listing options={language=isabelle,aboveskip=0pt,belowskip=0pt},size=fbox,boxrule=0pt,frame hidden,arc=0pt,colback=yellow!10!white}
% coinductive lprefix :: "'a llist => 'a llist => bool" where
%   LNil_lprefix: "lprefix LNil lys"
% | LCons_lprefix: "lprefix lxs lys => lprefix (LCons x lxs) (LCons x lys)"

% lprefix (LCons 1 (LCons (2 (...)))) (LCons 1 (LCons (2 (...))))
%           \end{tcblisting}
          \pause
    \item Coinduction principle
    % \item But not coinduction up to congruence for free
  \end{itemize}
