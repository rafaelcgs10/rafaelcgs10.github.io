#+TITLE: Aula 2 - Programação Funcional em Coq
#+AUTHOR: Rafael Castro - rafaelcgs10.github.io/coq
#+EMAIL: rafaelcgs10@gmail.com
#+startup: beamer
#+LaTeX_CLASS: beamer
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="style.css"/>
#+LATEX_HEADER: \usepackage{graphicx, hyperref, udesc, url}
#+OPTIONS:   H:2 toc:nil
#+DATE: 02/05/2018

#+LANGUAGE: pt

* Programação Funcional

** O que é Programação Funcional?
 - O paradigma de programação funcional é baseado no simples conceito: se funções não têm efeitos colaterais, então tudo o que precisamos saber sobre funções são os seus mapeamentos. - (se ignorarmos ropriedades não funcionais como a eficiência!).
 - O termo funcional enfatiza que funções são /first class values/, ou seja, elas podem ser passadas como argumento para funções e retornadas por funções.
 - Polimorfismo, Tipos de Dados Algébricos e Tipos Recursivo (indutivos).

** Baby's First Functional Program
 - Um programa funcional é apenas um mapeamento!
 - Um programa (não recursivo) é definido com /Definition/, seguido pelo identificador, a sequência de argumentos, o tipo do seu retorno e a sua
definição.
 - Casamento de padrão desconstroi um identificador em seus possíveis valores. A seta /=>/ informa o respectivo resultado para um valor.
#+BEGIN_SRC coq
Definition next_weekday (d:day) : day :=
  match d with
  | monday => tuesday
  | tuesday => wednesday
  | wednesday => thursday
  | thursday => friday
  | friday => monday
  | saturday => monday
  | sunday => monday
  end.
#+END_SRC

** Executando computações em Coq
#+BEGIN_SRC coq
Compute (next_weekday friday).

Compute (next_weekday (next_weekday saturday)).
#+END_SRC
